{"version":3,"sources":["components/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Calculator","useState","firstNumber","setFirstNumber","secondNumber","setSecondNumber","operator","setOperator","result","setResult","className","map","number","key","onClick","num","target","textContent","onClickNumberHandler","action","act","onClickActionHandler","Number","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAuFeA,EArFI,WAAO,IAAD,EACeC,mBAAS,IADxB,mBAChBC,EADgB,KACHC,EADG,OAEiBF,mBAAS,IAF1B,mBAEhBG,EAFgB,KAEFC,EAFE,OAGSJ,mBAAS,IAHlB,mBAGhBK,EAHgB,KAGNC,EAHM,OAIKN,mBAAS,IAJd,mBAIhBO,EAJgB,KAIRC,EAJQ,KAuDvB,OACE,sBAAKC,UAAU,aAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,UACE,4CACA,sCAAOR,GAAP,OAAqBI,GAArB,OAAgCF,QAElC,sBAAKM,UAAU,SAAf,UACE,wCACA,4BAAIF,UAGR,sBAAKE,UAAU,UAAf,UACE,qBAAKA,UAAU,UAAf,SA9DU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GA+D3BC,KAAI,SAACC,EAAQC,GAAT,OAAiB,qBAAeH,UAAU,SAASI,QAAS,SAAAC,GAAG,OA5DvD,SAACH,GACvBV,EAGHG,EAAgBO,EAAOI,OAAOC,aAF9Bd,EAAeS,EAAOI,OAAOC,aA0DuDC,CAAqBH,IAAvE,SAA8EH,GAApEC,QAE1C,sBAAKH,UAAU,UAAf,UAhES,CAAC,IAAK,IAAK,IAAK,KAiEfC,KAAI,SAACQ,EAAQN,GAAT,OAAiB,qBAAeH,UAAU,SAASI,QAC3D,SAAAM,GAAG,OAxDc,SAACA,GAC5Bb,EAAYa,EAAIJ,OAAOC,aAuDNI,CAAqBD,IADH,SACUD,GADAN,MAEvC,qBAAKH,UAAU,QAAQI,QArDF,WAC3B,OAAQR,GACN,IAAK,IACHG,EAAUa,OAAOpB,GAAeoB,OAAOlB,IACvC,MACF,IAAK,IACHK,EAAUa,OAAOpB,GAAeoB,OAAOlB,IACvC,MACF,IAAK,IACHK,EAAUa,OAAOpB,GAAeoB,OAAOlB,IACvC,MACF,IAAK,IACHK,EAAUa,OAAOpB,GAAeoB,OAAOlB,MAyCrC,qBAGJ,sBAAKM,UAAU,YAAf,UACE,qBAAKA,UAAU,QAAQI,QAzCR,WACfZ,GAAeI,GAAYF,GAC7BC,EAAgB,IAChBkB,QAAQC,IAAI,IACHtB,GAAeI,EACxBC,EAAY,IAEZJ,EAAe,KAkCb,eACA,qBAAKO,UAAU,QAAQI,QAhCR,WACnBX,EAAe,IACfE,EAAgB,IAChBE,EAAY,IACZE,EAAU,KA4BN,0BCtEOgB,MARf,WACE,OACE,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,OCMSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7d6088d8.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\nconst Calculator = () => {\r\n  const [firstNumber, setFirstNumber] = useState('')\r\n  const [secondNumber, setSecondNumber] = useState('')\r\n  const [operator, setOperator] = useState('')\r\n  const [result, setResult] = useState('')\r\n\r\n  const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]\r\n  const action = [\"+\", \"-\", \"*\", \"/\",]\r\n\r\n  const onClickNumberHandler = (number) => {\r\n    if (!firstNumber) {\r\n      setFirstNumber(number.target.textContent)\r\n    } else {\r\n      setSecondNumber(number.target.textContent)\r\n    }\r\n  }\r\n\r\n  const onClickActionHandler = (act) => {\r\n    setOperator(act.target.textContent)\r\n  }\r\n\r\n  const onClickResultHandler = () => {\r\n    switch (operator) {\r\n      case \"+\":\r\n        setResult(Number(firstNumber) + Number(secondNumber))\r\n        break;\r\n      case \"-\":\r\n        setResult(Number(firstNumber) - Number(secondNumber))\r\n        break;\r\n      case \"*\":\r\n        setResult(Number(firstNumber) * Number(secondNumber))\r\n        break;\r\n      case \"/\":\r\n        setResult(Number(firstNumber) / Number(secondNumber))\r\n        break;\r\n    }\r\n  }\r\n  const onClickClear = () => {\r\n    if (firstNumber && operator && secondNumber) {\r\n      setSecondNumber('')\r\n      console.log(1)\r\n    } else if (firstNumber && operator) {\r\n      setOperator('')\r\n    } else {\r\n      setFirstNumber('')\r\n    }\r\n  }\r\n  const onClickReset = () => {\r\n    setFirstNumber('')\r\n    setSecondNumber('')\r\n    setOperator('')\r\n    setResult('')\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='calculator'>\r\n      <div className=\"operation-wrap\">\r\n        <div className=\"operation\">\r\n          <h4>Operation:</h4>\r\n          <p>{`${firstNumber}${operator}${secondNumber}`}</p>\r\n        </div>\r\n        <div className='result'>\r\n          <h4>Score:</h4>\r\n          <p>{result}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"keybord\">\r\n        <div className=\"numbers\">\r\n          {numbers.map((number, key) => <div key={key} className=\"number\" onClick={num => onClickNumberHandler(num)}>{number}</div>)}\r\n        </div>\r\n        <div className='actions'>\r\n          {action.map((action, key) => <div key={key} className='action' onClick\r\n            ={act => onClickActionHandler(act)}>{action}</div>)}\r\n          <div className=\"equal\" onClick={onClickResultHandler}>=</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"reset-box\">\r\n        <div className=\"clear\" onClick={onClickClear}>C</div>\r\n        <div className=\"reset\" onClick={onClickReset}>Reset</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Calculator\r\n","import './App.sass';\nimport Calculator from './components/Calculator';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}