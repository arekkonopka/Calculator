{"version":3,"sources":["components/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Calculator","useState","firstNumber","setFirstNumber","secondNumber","setSecondNumber","operator","setOperator","result","setResult","className","join","map","number","key","onClick","num","prev","target","textContent","onClickNumberHandler","action","act","onClickActionHandler","Number","splice","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAiGeA,EA/FI,WAAO,IAAD,EACeC,mBAAS,CAAC,KADzB,mBAChBC,EADgB,KACHC,EADG,OAEiBF,mBAAS,CAAC,KAF3B,mBAEhBG,EAFgB,KAEFC,EAFE,OAGSJ,mBAAS,IAHlB,mBAGhBK,EAHgB,KAGNC,EAHM,OAIKN,mBAAS,IAJd,mBAIhBO,EAJgB,KAIRC,EAJQ,KAiEvB,OACE,sBAAKC,UAAU,aAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,UACE,4CACA,sCAAOR,EAAYS,KAAK,KAAxB,OAA8BL,GAA9B,OAAyCF,EAAaO,KAAK,UAE7D,sBAAKD,UAAU,SAAf,UACE,wCACA,4BAAKF,UAGT,sBAAKE,UAAU,UAAf,UACE,qBAAKA,UAAU,UAAf,SAvEU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAwE3BE,KAAI,SAACC,EAAQC,GAAT,OAAiB,qBAAeJ,UAAU,SAASK,QAAS,SAAAC,GAAG,OArEvD,SAACH,GACvBP,EAIHD,GAAgB,SAACY,GAAD,4BAAcA,GAAd,CAAoBJ,EAAOK,OAAOC,iBAHlDhB,GAAe,SAACc,GAAD,4BAAcA,GAAd,CAAoBJ,EAAOK,OAAOC,iBAmEmCC,CAAqBJ,IAAvE,SAA8EH,GAApEC,QAE1C,sBAAKJ,UAAU,UAAf,UAzES,CAAC,IAAK,IAAK,IAAK,KA0EfE,KAAI,SAACS,EAAQP,GAAT,OAAiB,qBAAeJ,UAAU,SAASK,QAC3D,SAAAO,GAAG,OAhEc,SAACA,GAC5Bf,EAAYe,EAAIJ,OAAOC,aA+DNI,CAAqBD,IADH,SACUD,GADAP,MAEvC,qBAAKJ,UAAU,QAAQK,QA7DF,WAC3B,OAAQT,GACN,IAAK,IACHG,EAAUe,OAAOtB,EAAYS,KAAK,KAAOa,OAAOpB,EAAaO,KAAK,MAClE,MACF,IAAK,IACHF,EAAUe,OAAOtB,EAAYS,KAAK,KAAOa,OAAOpB,EAAaO,KAAK,MAClE,MACF,IAAK,IACHF,EAAUe,OAAOtB,EAAYS,KAAK,KAAOa,OAAOpB,EAAaO,KAAK,MAClE,MACF,IAAK,IACHF,EAAUe,OAAOtB,EAAYS,KAAK,KAAOa,OAAOpB,EAAaO,KAAK,QAiDhE,qBAGJ,sBAAKD,UAAU,YAAf,UACE,qBAAKA,UAAU,QAAQK,QA/CR,WACfS,OAAOtB,EAAYS,KAAK,MAAQL,GAAYkB,OAAOpB,EAAaO,KAAK,MACvEP,EAAaqB,OAAOrB,EAAasB,OAAS,EAAG,GAC7CrB,GAAgB,SAAAY,GAAI,mBAAQA,OAGnBf,EAAYS,KAAK,KAAOL,EACjCC,EAAY,KAGZL,EAAYuB,OAAOvB,EAAYwB,OAAS,EAAG,GAC3CvB,GAAe,SAAAc,GAAI,mBAAQA,QAoCzB,eACA,qBAAKP,UAAU,QAAQK,QAjCR,WACnBZ,EAAe,CAAC,KAChBE,EAAgB,CAAC,KACjBE,EAAY,IACZE,EAAU,CAAC,MA6BP,0BChFOkB,MARf,WACE,OACE,qBAAKjB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a372cdc6.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nconst Calculator = () => {\r\n  const [firstNumber, setFirstNumber] = useState([''])\r\n  const [secondNumber, setSecondNumber] = useState([''])\r\n  const [operator, setOperator] = useState('')\r\n  const [result, setResult] = useState('')\r\n\r\n\r\n  const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]\r\n  const action = [\"+\", \"-\", \"*\", \"/\",]\r\n\r\n  const onClickNumberHandler = (number) => {\r\n    if (!operator) {\r\n      setFirstNumber((prev) => [...prev, number.target.textContent])\r\n    }\r\n    else {\r\n      setSecondNumber((prev) => [...prev, number.target.textContent])\r\n    }\r\n  }\r\n\r\n  const onClickActionHandler = (act) => {\r\n    setOperator(act.target.textContent)\r\n  }\r\n\r\n  const onClickResultHandler = () => {\r\n    switch (operator) {\r\n      case \"+\":\r\n        setResult(Number(firstNumber.join('')) + Number(secondNumber.join('')))\r\n        break;\r\n      case \"-\":\r\n        setResult(Number(firstNumber.join('')) - Number(secondNumber.join('')))\r\n        break;\r\n      case \"*\":\r\n        setResult(Number(firstNumber.join('')) * Number(secondNumber.join('')))\r\n        break;\r\n      case \"/\":\r\n        setResult(Number(firstNumber.join('')) / Number(secondNumber.join('')))\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  const onClickClear = () => {\r\n    if (Number(firstNumber.join('')) && operator && Number(secondNumber.join(''))) {\r\n      secondNumber.splice(secondNumber.length - 1, 1)\r\n      setSecondNumber(prev => [...prev])\r\n\r\n\r\n    } else if (firstNumber.join('') && operator) {\r\n      setOperator('')\r\n\r\n    } else {\r\n      firstNumber.splice(firstNumber.length - 1, 1)\r\n      setFirstNumber(prev => [...prev])\r\n\r\n    }\r\n  }\r\n  const onClickReset = () => {\r\n    setFirstNumber([''])\r\n    setSecondNumber([''])\r\n    setOperator('')\r\n    setResult([''])\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className='calculator'>\r\n      <div className=\"operation-wrap\">\r\n        <div className=\"operation\">\r\n          <h4>Operation:</h4>\r\n          <p>{`${firstNumber.join(\"\")}${operator}${secondNumber.join('')}`}</p>\r\n        </div>\r\n        <div className='result'>\r\n          <h4>Score:</h4>\r\n          <p>{(result)}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"keybord\">\r\n        <div className=\"numbers\">\r\n          {numbers.map((number, key) => <div key={key} className=\"number\" onClick={num => onClickNumberHandler(num)}>{number}</div>)}\r\n        </div>\r\n        <div className='actions'>\r\n          {action.map((action, key) => <div key={key} className='action' onClick\r\n            ={act => onClickActionHandler(act)}>{action}</div>)}\r\n          <div className=\"equal\" onClick={onClickResultHandler}>=</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"reset-box\">\r\n        <div className=\"clear\" onClick={onClickClear}>C</div>\r\n        <div className=\"reset\" onClick={onClickReset}>Reset</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Calculator\r\n","import './App.sass';\nimport Calculator from './components/Calculator';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}